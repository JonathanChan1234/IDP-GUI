import tkinter as tk
import time
import json
import datetime

from firebase import firebase

firebase = firebase.FirebaseApplication(
     'https://idpserver-75258.firebaseio.com/', None)
location = 'Record'

timelist = ["00:00", "00:15", "00:30", "00:45", "01:00", "01:15", "01:30", "01:45", "02:00"]
selectTime1 = 0
selectTime2 = 0
spotSelected = 0
color1 = "yellow"
new_user = "entry"


def chooseSpot0():
    global spotSelected
    spotSelected = 0
    if spotSelected == 0:
        b1.config(bg="gray")
        b2.config(bg="white")
    if spotSelected == 1:
        b1.config(bg="white")
        b2.config(bg="gray")


def chooseSpot1():
    global spotSelected
    spotSelected = 1
    if spotSelected == 0:
        b1.config(bg="gray")
        b2.config(bg="white")
    if spotSelected == 1:
        b1.config(bg="white")
        b2.config(bg="gray")


def addTime():
    global spotSelected
    global selectTime1, selectTime2
    if spotSelected == 0:
        selectTime1 = (selectTime1 + 1) % 9
        displaytime1.config(text=timelist[selectTime1])
    if spotSelected == 1:
        selectTime2 = (selectTime2 + 1) % 9
        displaytime2.config(text=timelist[selectTime2])


def minusTime():
    global spotSelected
    global selectTime1, selectTime2
    if spotSelected == 0:
        selectTime1 -= 1
        if(selectTime1 < 0):
            selectTime1 = 8
        displaytime1.config(text=timelist[selectTime1])
    if spotSelected == 1:
        selectTime2 -= 1
        if(selectTime2 < 0):
            selectTime2 = 8
        displaytime2.config(text=timelist[selectTime2])


def confirm():
    global spotSelected
    global new_user
    global selectTime1, selectTime2
    if spotSelected == 0:
        t = time.time()
        date = datetime.datetime.fromtimestamp(t).strftime('%Y%m%d%H%M%S')
        data = {'date': date, 'duration': timelist[selectTime1], "spot":spotSelected}
        result = firebase.put('', '0019', data)
    if spotSelected == 1:
        t = time.time()
        date = datetime.datetime.fromtimestamp(t).strftime('%Y%m%d%H%M%S')
        data = {'date': date, 'duration': timelist[selectTime2], "spot": spotSelected}
        result = firebase.put('', '0020', data)


def tick():
    global time1
    # get the current local time from the PC
    time2 = time.strftime('%H:%M:%S')
    # if time string has changed, update it
    if time2 != time1:
        time1 = time2
        clock.config(text=time2)
    # calls itself every 200 milliseconds
    # to update the time display as needed
    # could use >200 ms, but display gets jerky
    clock.after(200, tick)


win = tk.Tk()
win.geometry("800x600"+"0"+"0")
win.title("Meter")
print([2:0])

Tops = tk.Frame(win, width=1600, height=50, bg="blue", relief=tk.SUNKEN)
Tops.pack(side=tk.TOP)

b1 = tk.Button(win, text="19", font=('calibri', 50, 'bold'), command=lambda: chooseSpot0())
b1.place(relx=0.2, rely=0.3, anchor=tk.CENTER)
b1.config(bg="white")

b2 = tk.Button(win, text="20", font=('calibri', 50, 'bold'), command=lambda: chooseSpot1())
b2.place(relx=0.8, rely=0.3, anchor=tk.CENTER)
b2.config(bg="white")

b3 = tk.Button(win, text="+", font=('calibri', 20, 'bold'), command=lambda: addTime())
b3.place(relx=0.45, rely=0.45, anchor=tk.CENTER)

b4 = tk.Button(win, text="-", font=('calibri', 20, 'bold'), command=lambda: minusTime())
b4.place(relx=0.55, rely=0.45, anchor=tk.CENTER)

b5 = tk.Button(win, text="Confirm", font=('calibri', 20, 'bold'), command=lambda: confirm())
b5.place(relx=0.5, rely=0.8, anchor=tk.CENTER)

displaytime1 = tk.Label(win, font=('calibri', 30, 'bold'), fg="black", bg="green")
displaytime1.place(relx=0.2, rely=0.45, anchor=tk.CENTER)
displaytime1.config(text=timelist[selectTime1])

displaytime2 = tk.Label(win, font=('calibri', 30, 'bold'), fg="black", bg="green")
displaytime2.place(relx=0.8, rely=0.45, anchor=tk.CENTER)
displaytime2.config(text=timelist[selectTime2])

clock = tk.Label(win, font=('times', 20, 'bold'), bg="red")
clock.pack()
time1 = ''
tick()

win.mainloop()
